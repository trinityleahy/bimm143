---
title: "Class 11: Candy Project"
author: "Trinity Leahy"
format: pdf
editor: visual
---

In today's class we will examine 538 Candy data and see if it helps is gain some more feeling for how PCA and other methods word.

```{r}
candy <- read.csv("candy-data.csv", row.names = 1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

> Q. What are these fruity candy?

We can use the `==`

```{r}
rownames(candy [candy$fruity == 1,])
```

## How often does my favorite candy win?

> Q3. What is your favorite candy in the dataset and what is it's winpercent value?

```{r}
candy["Sour Patch Kids", "winpercent"]
```

> Q4. What is the winpercent value for "Kit Kat"?

```{r}
candy["Kit Kat", "winpercent"]
```

> Q5. What is the winpercent value for "Tootsie Roll Snack Bars"?

```{r}
candy["Tootsie Roll Snack Bars", "winpercent"]
```

Now we are going to use `skim()` to give up a brief overview of the dataset.

```{r}
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The `winpercent` column is on a different scale (0:100) compared to the rest of the columns (0:1).

> Q7. What do you think a zero and one represent for the candy\$chocolate column?

The zero means the candy does not contain chocolate and the one means it does have chocolate.

> Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)
ggplot(candy, aes(winpercent,)) +
  geom_histogram(bins=10)
```

> Q9. Is the distribution of winpercent values symmetrical?

No

> Q10. Is the center of the distribution above or below 50%?

Below

```{r}
mean(candy$winpercent)
```

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
chocolate.winpercent <- (candy [candy$fruity == 1, "winpercent"])
mean(chocolate.winpercent)
fruity.winpercent <- (candy [candy$chocolate == 1, "winpercent"])
mean(fruity.winpercent)
```

Extensive steps

```{r}
# Filter/select/subset to just chocolate rows
chocolate.candy <- candy[as.logical(candy$chocolate),]

#Get their winpercent values
chocolate.winpercent <-  chocolate.candy$winpercent

#Calculate their mean winpercent value
mean(chocolate.candy)
```

```{r}
# Filter/select/subset to just chocolate rows
fruity.candy <- candy[as.logical(candy$fruity),]

#Get their winpercent values
fruity.winpercent <-  fruity.candy$winpercent

#Calculate their mean winpercent value
mean(fruity.candy)
```

Chocolate candy is ranked higher than fruity candy.

> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.winpercent, fruity.winpercent)
```

Yes, with a very small p-value, the difference is statistically significance.

## Overall Candy Ranking


> Q13. What are the five least liked candy types in this set?

There is a base R function called `sort()` for sorting vector inputs.

```{r}
sort(candy$winpercent, decreasing = FALSE)
```

The related function is `sort()` that is often more useful than `order()`. It returns the "indices" of the input that would result in it being sorted.

```{r}
ord <-  order(candy$winpercent)
head(candy[ord,])
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
ord2 <- order(candy$winpercent, decreasing = TRUE)
head(candy [ord2,], 5)
```

> Q15 & Q16. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) +
  aes(winpercent, rownames(candy)) +
  geom_col()
```

```{r}
ggplot(candy, aes(winpercent, reorder(rownames(candy), winpercent))) +
  geom_col()
```

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy, aes(winpercent, reorder(rownames(candy), winpercent))) +
  geom_col(fill = my_cols)
```
> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starbursts

## Taking a look at pricepercent

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent) +
  geom_point(col=my_cols)
```

Let's add some labels.

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label = rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text()
```

To deal with overlapping labels, I can use **ggrepel** package.

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=2.5, max.overlaps = 7)
```


> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's Miniatures

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

Nik L Nip, Nestle Smarties, Ring Pop, Hershey's Krackel, Hersheys Milk Chocolate
Nik L Nip is the least popular.

## Exploring the Correlation Structure

```{r}
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity are highly anti-correlated.

> Q23. Similarly, what two variables are most positively correlated?

Winpercent and chocolate are highly correlated.

## Principal Component Analysis

The base R function for PCA is called `prcomp()` and we can set "scale=TRUE/FALSE".

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

The main result of PCA - i.e.e the new PC plot is contained in `pca$x`.

```{r}
pc <- as.data.frame(pca$x)

ggplot(pc, aes(PC1, PC2, label=rownames(pc)))+ 
  geom_point(col=my_cols)

#geom_text_repel(max.overlaps = 5)
```
```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Yes, this makes sense because we would expect fruity candy to be hard and pluribus.
